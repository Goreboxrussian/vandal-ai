import logging
import json
import requests
from aiogram import Bot, Dispatcher, types
from aiogram.enums import ParseMode
from aiogram.types import Message
from aiogram.filters import CommandStart
from aiogram.utils.keyboard import ReplyKeyboardBuilder
from config import BOT_TOKEN, OPENROUTER_API_KEY

logging.basicConfig(level=logging.INFO)
bot = Bot(token=BOT_TOKEN, default=types.DefaultBotProperties(parse_mode=ParseMode.MARKDOWN))
dp = Dispatcher()

WELCOME_MESSAGE = (
    "üëã –ü—Ä–∏–≤–µ—Ç! –Ø *–ù–µ–π—Ä–æ–ë–∞—Ö—Ç–∞* ‚Äî —Ç–≤–æ–π AI –ø–æ–º–æ—â–Ω–∏–∫ –Ω–∞ –±–∞–∑–µ `deepseek-r1`.

"
    "üß† –ü—Ä–æ—Å—Ç–æ –∑–∞–¥–∞–π –º–Ω–µ –≤–æ–ø—Ä–æ—Å –∏–ª–∏ –Ω–∞–ø–∏—à–∏ —á—Ç–æ-–Ω–∏–±—É–¥—å.
"
    "üîÅ –ß—Ç–æ–±—ã *—Å–±—Ä–æ—Å–∏—Ç—å –∫–æ–Ω—Ç–µ–∫—Å—Ç*, –∏—Å–ø–æ–ª—å–∑—É–π –∫–æ–º–∞–Ω–¥—É /reset.

"
    "*–ü—Ä–∞–≤–∏–ª–∞ –æ–±—â–µ–Ω–∏—è:*
"
    "1. –ù–µ–ª—å–∑—è –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å –≤—Ä–µ–¥–æ–Ω–æ—Å–Ω—ã–µ, –∑–∞–ø—Ä–µ—â—ë–Ω–Ω—ã–µ –∏–ª–∏ —ç–∫—Å—Ç—Ä–µ–º–∏—Å—Ç—Å–∫–∏–µ –∑–∞–ø—Ä–æ—Å—ã
"
    "2. –ù–µ –Ω–∞—Ä—É—à–∞–π –ø—Ä–∞–≤–∏–ª–∞ Telegram –∏ –∑–∞–∫–æ–Ω–∞
"
    "3. –Ø –º–æ–≥—É –æ—à–∏–±–∞—Ç—å—Å—è ‚Äî –ø—Ä–æ–≤–µ—Ä—è–π –≤–∞–∂–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é
"
)

@dp.message(CommandStart())
async def command_start_handler(message: Message) -> None:
    await message.answer(WELCOME_MESSAGE)

@dp.message()
async def handle_message(message: Message):
    user_message = message.text

    headers = {
        "Authorization": f"Bearer {OPENROUTER_API_KEY}",
        "Content-Type": "application/json",
        "HTTP-Referer": "https://your-site.com",
        "X-Title": "NeiroBaxtaBot",
    }

    data = {
        "model": "deepseek/deepseek-r1-0528:free",
        "messages": [{"role": "user", "content": user_message}],
    }

    try:
        response = requests.post("https://openrouter.ai/api/v1/chat/completions", headers=headers, data=json.dumps(data))
        result = response.json()
        reply = result["choices"][0]["message"]["content"]
        await message.answer(reply)
    except Exception as e:
        logging.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞—â–µ–Ω–∏–∏ –∫ API:", exc_info=e)
        await message.answer("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞—â–µ–Ω–∏–∏ –∫ –Ω–µ–π—Ä–æ—Å–µ—Ç–∏. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")

if __name__ == "__main__":
    dp.run_polling(bot)